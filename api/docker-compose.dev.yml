services:
    app:
        build:
            dockerfile: Dockerfile.dev
        image: ecommerce-app_dev
        container_name: ecommerce-app_dev-cont
        ports:
            - ${PORT_EXT}:${PORT_APP}
        environment:
            - PORT_APP=${PORT_APP}
            - DB_USER=${DB_USER}
            - DB_PASSWORD=${DB_PASSWORD}
            - DB_NAME=${DB_NAME}
            - DB_HOST=db
            - DB_PORT=${DB_PORT}
            - JWT_SECRET=${JWT_SECRET}
        volumes:
            - ./:/app
        depends_on:
            db:
                condition: service_healthy
        command: sh -c "npm install && npm run dev"
        networks:
            example_network_dev:

    db:
        container_name: ecommerce-db_dev-cont
        image: postgres:16.1-bullseye
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U ${DB_USER} -d ${DB_NAME}']
            interval: 10s
            timeout: 5s
            retries: 5
        #ports:
        #    - "${DB_PORT}:5432"
        environment:
            - POSTGRES_DB=${DB_NAME}
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
        volumes:
            - ./data_dev:/var/lib/postgresql/data
        networks:
            example_network_dev:

    pgadmin:
        image: dpage/pgadmin4
        container_name: ecommerce-pgadmin_dev-cont
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        ports:
            - ${PGADMIN_PORT_EXT}:80
        depends_on:
            db:
                condition: service_healthy
        volumes:
            - pgadmin-data_dev:/var/lib/pgadmin
        networks:
            example_network_dev:

volumes:
    pgadmin-data_dev:

networks:
    example_network_dev:
